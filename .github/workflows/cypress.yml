name: Build, Test, and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Job to build the application
  build-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build # Assumes 'build' script in package.json

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-dist
          path: dist # Assumes build output is in 'dist' folder

  # Job to run Cypress tests in parallel
  cypress-run:
    needs: build-app
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Keep running other tests even if one matrix job fails
      matrix:
        include:
          - folder: cypress/e2e/login
            label: login
          - folder: cypress/e2e/signup
            label: signup
          - folder: cypress/e2e/api
            label: api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-dist
          path: dist

      - name: Run Cypress tests against served app
        uses: cypress-io/github-action@v6
        with:
          start: npx serve -s dist
          wait-on: 'http://localhost:3000'
          spec: "${{ matrix.folder }}/**/*.cy.js"
          config: baseUrl=http://localhost:3000
          # Note: API tests might need a different configuration
          # if they don't run against the locally served app.

      - name: Upload Cypress Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{matrix.label}}
          path: cypress/screenshots
          if-no-files-found: ignore

      - name: Upload Cypress Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: videos-${{matrix.label}}
          path: cypress/videos

      - name: Upload Mochawesome Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-report-${{ matrix.label }}
          path: cypress/reports/mocha
          if-no-files-found: ignore

  # Job to merge reports and deploy the app + report to GitHub Pages
  deploy-site:
    needs: [build-app, cypress-run]
    if: always()
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies for report merging
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-dist
          path: ./_site

      - name: Download all mochawesome reports
        uses: actions/download-artifact@v4
        with:
          path: ./all-mochawesome-reports
          pattern: mochawesome-report-*
          merge-multiple: true

      - name: Merge and Generate HTML Report
        run: |
          npx mochawesome-merge "all-mochawesome-reports/*.json" > report.json
          npx marge report.json -f report -o ./_site/report

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
